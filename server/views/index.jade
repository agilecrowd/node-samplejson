extends layout

block content
  if (!user)
    a(href="/login") Login
    br
    a(href="/register") Register
  if (user)
    p Welcome #{user.username}!
    a(href="/logout") Logout

    h1(style='color: #c0c0c0; font-size: 2em; margin-bottom:0; line-height: 1em;')
      span(style='color: #f49040;') SampleJSON.io
      span(style='font-size: 0.8em') Online Schema Editor & REST api support
    i(style='font-size: 0.88em') "Edit your schema online, call your REST api instantly. Simple, light and fast!"
    br
    br
    button(style='font-size: 1.2em; margin-bottom:0; line-height: 1em;', onclick='new_app()') New App!
    button(style='font-size: 1.2em; margin-bottom:0; line-height: 1em;', onclick='save()') Save!
    button(style='font-size: 1.2em; margin-bottom:0; line-height: 1em;', onclick='run()') Run!
    i(style='font-size: 1em')
      | You can also get the JSON with the REST API: "http://{hostname:port}/api/v1/samples/?app_id={app_id}"
    button(style='font-size: 1.2em; margin-bottom:0; line-height: 1em;', onclick='del_app()') Remove App!
    br
    br
    p
      | Application Name:
      input#app_name(type='text', value='')
    #editor
    #output
    script.
      // Set the default size of fonts
      document.getElementById('editor').style.fontSize='14px'
      document.getElementById('output').style.fontSize='14px'

      var editor = ace.edit("editor")
      editor.setTheme("ace/theme/monokai")
      editor.getSession().setMode("ace/mode/handlebars")
      editor.getSession().setTabSize(2)
      editor.getSession().setUseSoftTabs(true)
      editor.$blockScrolling = Infinity

      editor.commands.addCommand({
        name: 'Save',
        bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
        exec: function(editor) {
          save()
        }
      })

      var output = ace.edit("output")
      output.setTheme("ace/theme/monokai")
      output.getSession().setMode("ace/mode/json")
      output.setReadOnly(true)
      output.getSession().setTabSize(2)
      output.getSession().setUseSoftTabs(true)
      output.$blockScrolling = Infinity

      var user=!{JSON.stringify(user)}

      function new_app() {
        // Prompt to input new app name
        var app_name = prompt("Please enter the app name", "HelloWorld")

        if (app_name != null) {
          $.post("/api/v1/apps/",
          {
            app_name: app_name,
            user_id : user._id
          },
          function(data, status){
            /*
             * data = {id/app_id, secure/app_key, app_name, schema/empty}
             */
            $("#app_name").val(data.application.name)
            editor.setValue('')
            user.app_id = data.application._id
            //alert("Data: " + JSON.stringify(data) + "\nStatus: " + status)
          })
        }
      }
      function save() {
        var plain_text = editor.getValue()
        // TODO: secure the plain text with app_key

        if (user.app_id) {
          // Update the existing template
          $.ajax({
            url: "/samples/",
            type: 'PUT',
            data: {
              template: plain_text,
              name: $("#app_name").val(),
              app_id: user.app_id,
              user_id: user._id
            },
            dataType: 'json',
            success: function(data, status){
              // alert("Data: " + JSON.stringify(data) + "\nStatus: " + status)
            }
          })
        } else {
          // Save a new template
          $.post("/samples/",
          {
            template: plain_text,
            name: $("#app_name").val(),
            user_id: user._id
          },
          function(data, status){
            // alert("Data: " + JSON.stringify(data) + "\nStatus: " + status)
            if (status === 'success' && data.status === 'ok') { user.app_id = data.application._id }
          })
        }
      }
      function run() {
        if (user.app_id) {
          $.get("/api/v1/samples/",
          {
            app_id: user.app_id
          },
          function(data, status){
            output.setValue(JSON.stringify(data, null, '  '))
          })
        } else {
          alert("Please 'Save' your schema at first!")
        }
      }
      $(document).ready(function() {
        $.get('/samples/', user, function(data, status){
          // alert("Data: " + JSON.stringify(data) + "\nStatus: " + status)
          editor.setValue(data.template)
          $("#app_name").val(data.name)
        })
      })
